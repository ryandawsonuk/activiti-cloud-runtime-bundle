#currently having fix port as eureka otherwise uses port 0 as with 11jan comment on https://github.com/spring-cloud/spring-cloud-config/issues/93 and in https://stackoverflow.com/questions/33270996/with-spring-cloud-brixton-m1-random-port-not-registered-with-eureka
server.port=${PORT:0}

spring.application.name=${NAME:runtime-bundle1}
spring.cloud.stream.bindings.auditProducer.destination=engineEvents
spring.cloud.stream.bindings.auditProducer.contentType=application/json
spring.cloud.stream.bindings.myCmdResults.destination=commandResults
spring.cloud.stream.bindings.myCmdResults.group=myCmdGroup
spring.cloud.stream.bindings.myCmdResults.contentType=application/json
spring.cloud.stream.bindings.myCmdProducer.destination=commandConsumer
spring.cloud.stream.bindings.myCmdProducer.contentType=application/json
keycloak.auth-server-url=${KEYCLOAKURL:http://activiti-cloud-keycloak:8180/auth}
keycloak.realm=springboot
keycloak.resource=activiti
keycloak.public-client=true

keycloak.security-constraints[0].authRoles[0]=user
keycloak.security-constraints[0].securityCollections[0].patterns[0]=/*

keycloak.principal-attribute=preferred-username
# see https://issues.jboss.org/browse/KEYCLOAK-810 for configuration options

keycloakadminclientapp=admin-cli
keycloakclientuser=client
keycloakclientpassword=client
# this user needs to have the realm management roles assigned
# one option to deal with password being here would be spring-boot-jasypt, keycloak may support others (can it be set as env variable?)

spring.rabbitmq.host=${RABBITHOST:rabbitmq}
eureka.client.serviceUrl.defaultZone=${EUREKAURL:http://activiti-cloud-registry:8761/eureka/}
eureka.instance.hostname=${HOST:activiti-cloud-runtime-bundle}

spring.datasource.driverClassName=${DBDRIVER:org.postgresql.Driver}
spring.datasource.url=${DBURI:jdbc:postgresql://rb-postgres:5432/activitidb}
spring.datasource.username=${DBUSER:postgres}
spring.datasource.password=${DBPASS:password}

spring.jpa.database-platform=${DBPLATFORM:org.hibernate.dialect.PostgreSQLDialect}
spring.jpa.generate-ddl=${GENERATEDDL:true}
spring.jpa.hibernate.ddl-auto=${DDLAUTO:create}

#env variable or /processes/ fallback - or if below is removed classpath:/processes/ is used as per ActivitiProperties class
spring.activiti.process-definition-location-prefix=file:${PROCESSESPATH:/processes/}